{% set name = "mpb" %}
{% set version = "1.11.1" %}
{% set sha256 = "dc55b081c56079727dac92d309f8e4ea84ca6eea9122ec24b7955f8c258608e1" %}
{% set buildnumber = 4 %}

# recipe-lint fails if mpi is undefined
{% set mpi = mpi or 'nompi' %}
{% if mpi == "nompi" %}
# prioritize nompi via build number
{% set buildnumber = buildnumber + 100 %}
{% endif %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/NanoComp/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ buildnumber }}
  skip: true  # [win]
  {% if mpi != "nompi" %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  # add build string so packages can depend on
  # mpi or nompi variants
  # dependencies:
  # `mpb * mpi_mpich_*` for mpich
  # `mpb * mpi_*` for any mpi
  # `mpb * nompi_*` for no mpi
  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ buildnumber }}
  run_exports:
    - {{ name }} * {{ mpi_prefix }}_*

requirements:
  build:
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - make

  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - libblas
    - libcblas
    - liblapack
    - fftw
    # We need to list hdf5 twice to get version pinning from
    # conda_build_config.yaml, (which falls back to the one from conda-forge,)
    # and build pinning from {{ mpi_prefix }}
    - hdf5
    - hdf5 * {{ mpi_prefix }}_*

  run:
    - {{ mpi }}  # [mpi != 'nompi']
    - fftw
    - hdf5
    - zlib
    - _openmp_mutex  # [linux]

test:
  commands:
    - test -f ${PREFIX}/lib/libmpb${SHLIB_EXT}

about:
  home: https://github.com/NanoComp/mpb
  license: GPL-2.0-or-later
  license_file: COPYING
  summary: MIT Photonic-Bands - computation of photonic band structures in periodic media
  doc_url: https://mpb.readthedocs.io
  dev_url: https://github.com/NanoComp/mpb

extra:
  recipe-maintainers:
    - ChristopherHogan
    - oskooi
    - RobinD42
